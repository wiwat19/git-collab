const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors()); // р╣Ар╕Ыр╕┤р╕Фр╣Гр╕Кр╣Й CORS р╕кр╕│р╕лр╕гр╕▒р╕Ъ frontend
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Static files (р╕Цр╣Йр╕▓р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕кр╕┤р╕гр╣Мр╕Я HTML file)
app.use(express.static('public'));

// р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З
const products = [
    {
        id: 1,
        name: "р╕кр╕бр╕▓р╕гр╣Мр╕Чр╣Вр╕Яр╕Щ Samsung Galaxy S24",
        description: "р╕кр╕бр╕▓р╕гр╣Мр╕Чр╣Вр╕Яр╕Щр╕гр╕╕р╣Ир╕Щр╣Гр╕лр╕бр╣Ир╕ер╣Ир╕▓р╕кр╕╕р╕Ф р╕Юр╕гр╣Йр╕нр╕бр╕Бр╕ер╣Йр╕нр╕Зр╕Др╕зр╕▓р╕бр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕кр╕╣р╕З р╣Бр╕ер╕░р╕Ыр╕гр╕░р╕кр╕┤р╕Чр╕Шр╕┤р╕ар╕▓р╕Юр╕Чр╕╡р╣Ир╣Ар╕лр╕Щр╕╖р╕нр╕Бр╕зр╣Ир╕▓ р╣Ар╕лр╕бр╕▓р╕░р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Гр╕Щр╕Кр╕╡р╕зр╕┤р╕Хр╕Ыр╕гр╕░р╕Ир╕│р╕зр╕▒р╕Щ"
    },
    {
        id: 2,
        name: "р╕лр╕╣р╕Яр╕▒р╕Зр╣Др╕гр╣Йр╕кр╕▓р╕в AirPods Pro",
        description: "р╕лр╕╣р╕Яр╕▒р╕Зр╣Др╕гр╣Йр╕кр╕▓р╕вр╕Др╕╕р╕Ур╕ар╕▓р╕Юр╣Ар╕кр╕╡р╕вр╕Зр╕гр╕░р╕Фр╕▒р╕Ър╕Юр╕гр╕╡р╣Ар╕бр╕╡р╕вр╕б р╕Юр╕гр╣Йр╕нр╕бр╕гр╕░р╕Ър╕Ър╕Хр╕▒р╕Фр╣Ар╕кр╕╡р╕вр╕Зр╕гр╕Ър╕Бр╕зр╕Щ р╣Бр╕ер╕░р╣Бр╕Ър╕Хр╣Ар╕Хр╕нр╕гр╕╡р╣Ир╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Др╕Фр╣Йр╕Щр╕▓р╕Щ"
    },
    {
        id: 3,
        name: "р╣Бр╕ер╣Зр╕Ыр╕Чр╣Зр╕нр╕Ы MacBook Air M2",
        description: "р╣Бр╕ер╣Зр╕Ыр╕Чр╣Зр╕нр╕Ыр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Зр╕▓р╕Щр╕нр╕нр╕Яр╕Яр╕┤р╕ир╣Бр╕ер╕░р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щ р╕Ыр╕гр╕░р╕кр╕┤р╕Чр╕Шр╕┤р╕ар╕▓р╕Юр╕кр╕╣р╕Зр╕Фр╣Йр╕зр╕вр╕Кр╕┤р╕Ы M2 р╕Щр╣Йр╕│р╕лр╕Щр╕▒р╕Бр╣Ар╕Ър╕▓р╣Бр╕ер╕░р╣Бр╕Ър╕Хр╣Ар╕Хр╕нр╕гр╕╡р╣Ир╕Чр╕Щр╕Чр╕▓р╕Щ"
    },
    {
        id: 4,
        name: "р╕Щр╕▓р╕мр╕┤р╕Бр╕▓р╕нр╕▒р╕Ир╕Йр╕гр╕┤р╕вр╕░ Apple Watch Series 9",
        description: "р╕Щр╕▓р╕мр╕┤р╕Бр╕▓р╕нр╕▒р╕Ир╕Йр╕гр╕┤р╕вр╕░р╕Чр╕╡р╣Ир╕Кр╣Ир╕зр╕вр╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕кр╕╕р╕Вр╕ар╕▓р╕Ю р╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕в р╣Бр╕ер╕░р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕Бр╕▒р╕Ър╕кр╕бр╕▓р╕гр╣Мр╕Чр╣Вр╕Яр╕Щр╣Др╕Фр╣Йр╕нр╕вр╣Ир╕▓р╕Зр╕ер╕╖р╣Ир╕Щр╣Др╕лр╕е"
    },
    {
        id: 5,
        name: "р╣Бр╕Чр╣Зр╕Ър╣Ар╕ер╣Зр╕Х iPad Air",
        description: "р╣Бр╕Чр╣Зр╕Ър╣Ар╕ер╣Зр╕Хр╕нр╣Ар╕Щр╕Бр╕Ыр╕гр╕░р╕кр╕Зр╕Др╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Зр╕▓р╕Щр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щ р╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕Ър╕▒р╕Щр╣Ар╕Чр╕┤р╕З р╕Юр╕гр╣Йр╕нр╕бр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕кр╕╡р╕кр╕зр╕вр╣Бр╕ер╕░р╕Ыр╕гр╕░р╕кр╕┤р╕Чр╕Шр╕┤р╕ар╕▓р╕Юр╕кр╕╣р╕З"
    },
    {
        id: 6,
        name: "р╕Бр╕ер╣Йр╕нр╕Зр╕бр╕┤р╣Ар╕гр╕нр╕гр╣Мр╣Ар╕ер╕к Sony A7 IV",
        description: "р╕Бр╕ер╣Йр╕нр╕Зр╕бр╕┤р╣Ар╕гр╕нр╕гр╣Мр╣Ар╕ер╕кр╕гр╕░р╕Фр╕▒р╕Ър╕бр╕╖р╕нр╕нр╕▓р╕Кр╕╡р╕Ю р╣Ар╕лр╕бр╕▓р╕░р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Цр╣Ир╕▓р╕вр╕ар╕▓р╕Юр╣Бр╕ер╕░р╕зр╕┤р╕Фр╕╡р╣Вр╕нр╕Др╕╕р╕Ур╕ар╕▓р╕Юр╕кр╕╣р╕З р╕Юр╕гр╣Йр╕нр╕бр╣Ар╕ер╕Щр╕кр╣Мр╕Чр╕╡р╣Ир╕лр╕ер╕▓р╕Бр╕лр╕ер╕▓р╕в"
    },
    {
        id: 7,
        name: "р╕ер╕│р╣Вр╕Юр╕Зр╕Ър╕ер╕╣р╕Чр╕╣р╕Ш JBL Charge 5",
        description: "р╕ер╕│р╣Вр╕Юр╕Зр╕Юр╕Бр╕Юр╕▓р╣Ар╕кр╕╡р╕вр╕Зр╣Гр╕к р╕Бр╕▒р╕Щр╕Щр╣Йр╕│ р╕Юр╕гр╣Йр╕нр╕бр╣Бр╕Ър╕Хр╣Ар╕Хр╕нр╕гр╕╡р╣Ир╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Др╕Фр╣Йр╕вр╕▓р╕зр╕Щр╕▓р╕Щ р╣Ар╕лр╕бр╕▓р╕░р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ыр╕▓р╕гр╣Мр╕Хр╕╡р╣Йр╣Бр╕ер╕░р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕Бр╕ер╕▓р╕Зр╣Бр╕Ир╣Йр╕З"
    },
    {
        id: 8,
        name: "р╕Др╕╡р╕вр╣Мр╕Ър╕нр╕гр╣Мр╕Фр╣Ар╕Бр╕бр╕бр╕┤р╣Ир╕З Razer BlackWidow V3",
        description: "р╕Др╕╡р╕вр╣Мр╕Ър╕нр╕гр╣Мр╕Фр╣Ар╕Бр╕бр╕бр╕┤р╣Ир╕Зр╕гр╕░р╕Фр╕▒р╕Ър╣Вр╕Ыр╕г р╕Юр╕гр╣Йр╕нр╕бр╣Др╕Я RGB р╣Бр╕ер╕░р╕кр╕зр╕┤р╕Хр╕Кр╣М mechanical р╕Чр╕╡р╣Ир╕Хр╕нр╕Ър╕кр╕Щр╕нр╕Зр╕гр╕зр╕Фр╣Ар╕гр╣Зр╕з"
    }
];

// Routes
app.get('/', (req, res) => {
    res.json({
        message: 'Welcome to Products API!',
        endpoints: {
            products: '/api/products',
            product_by_id: '/api/products/:id'
        }
    });
});

// GET /api/products - р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
app.get('/api/products', (req, res) => {
    try {
        console.log('ЁЯУж р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф');
        res.json(products);
    } catch (error) {
        console.error('Error fetching products:', error);
        res.status(500).json({
            error: 'Internal Server Error',
            message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕Фр╣Й'
        });
    }
});

// GET /api/products/:id - р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Хр╕▓р╕б ID
app.get('/api/products/:id', (req, res) => {
    try {
        const productId = parseInt(req.params.id);
        const product = products.find(p => p.id === productId);
        
        if (!product) {
            return res.status(404).json({
                error: 'Product Not Found',
                message: `р╣Др╕бр╣Ир╕Юр╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓ ID: ${productId}`
            });
        }
        
        console.log(`ЁЯУж р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓ ID: ${productId}`);
        res.json(product);
    } catch (error) {
        console.error('Error fetching product:', error);
        res.status(500).json({
            error: 'Internal Server Error',
            message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕Фр╣Й'
        });
    }
});

// POST /api/products - р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╕бр╣И
app.post('/api/products', (req, res) => {
    try {
        const { name, description } = req.body;
        
        if (!name || !description) {
            return res.status(400).json({
                error: 'Bad Request',
                message: 'р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕Кр╕╖р╣Ир╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Бр╕ер╕░р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф'
            });
        }
        
        const newProduct = {
            id: products.length + 1,
            name,
            description
        };
        
        products.push(newProduct);
        console.log('тЬЕ р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╕бр╣И:', newProduct);
        
        res.status(201).json(newProduct);
    } catch (error) {
        console.error('Error adding product:', error);
        res.status(500).json({
            error: 'Internal Server Error',
            message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕Фр╣Й'
        });
    }
});

// PUT /api/products/:id - р╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕┤р╕Щр╕Др╣Йр╕▓
app.put('/api/products/:id', (req, res) => {
    try {
        const productId = parseInt(req.params.id);
        const { name, description } = req.body;
        
        const productIndex = products.findIndex(p => p.id === productId);
        
        if (productIndex === -1) {
            return res.status(404).json({
                error: 'Product Not Found',
                message: `р╣Др╕бр╣Ир╕Юр╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓ ID: ${productId}`
            });
        }
        
        if (name) products[productIndex].name = name;
        if (description) products[productIndex].description = description;
        
        console.log(`тЬПя╕П р╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕┤р╕Щр╕Др╣Йр╕▓ ID: ${productId}`);
        res.json(products[productIndex]);
    } catch (error) {
        console.error('Error updating product:', error);
        res.status(500).json({
            error: 'Internal Server Error',
            message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕Фр╣Й'
        });
    }
});

// DELETE /api/products/:id - р╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓
app.delete('/api/products/:id', (req, res) => {
    try {
        const productId = parseInt(req.params.id);
        const productIndex = products.findIndex(p => p.id === productId);
        
        if (productIndex === -1) {
            return res.status(404).json({
                error: 'Product Not Found',
                message: `р╣Др╕бр╣Ир╕Юр╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓ ID: ${productId}`
            });
        }
        
        const deletedProduct = products.splice(productIndex, 1)[0];
        console.log(`ЁЯЧСя╕П р╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓ ID: ${productId}`);
        
        res.json({
            message: 'р╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в',
            product: deletedProduct
        });
    } catch (error) {
        console.error('Error deleting product:', error);
        res.status(500).json({
            error: 'Internal Server Error',
            message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕Фр╣Й'
        });
    }
});

// 404 Handler
app.use((req, res) => {
    res.status(404).json({
        error: 'Not Found',
        message: 'р╣Др╕бр╣Ир╕Юр╕Ъ endpoint р╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г'
    });
});

// Error Handler
app.use((error, req, res, next) => {
    console.error('Server Error:', error);
    res.status(500).json({
        error: 'Internal Server Error',
        message: 'р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕ар╕▓р╕вр╣Гр╕Щр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М'
    });
});

// Start Server
app.listen(PORT, () => {
    console.log(`ЁЯЪА Express Server р╣Ар╕гр╕┤р╣Ир╕бр╕Чр╕│р╕Зр╕▓р╕Щр╣Бр╕ер╣Йр╕з!`);
    console.log(`ЁЯУб URL: http://localhost:${PORT}`);
    console.log(`ЁЯФЧ API Endpoint: http://localhost:${PORT}/api/products`);
    console.log(`ЁЯУЛ р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф: ${products.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
    console.log('тФА'.repeat(50));
});

// Graceful Shutdown
process.on('SIGTERM', () => {
    console.log('ЁЯЫС Server р╕Бр╕│р╕ер╕▒р╕Зр╕Ыр╕┤р╕Фр╕Хр╕▒р╕з...');
    process.exit(0);
});

process.on('SIGINT', () => {
    console.log('\nЁЯЫС Server р╕Ыр╕┤р╕Фр╕Хр╕▒р╕зр╣Бр╕ер╣Йр╕з');
    process.exit(0);
});